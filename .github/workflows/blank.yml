# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    branches:
      - 'releases/**'
  release:
    types: [created]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Extract branch name
      run: |
        if [[   ${GITHUB_REF} == *"releases"* ]]; then
          version_val= "${GITHUB_REF#refs/heads/releases/}"
        elif [[   ${GITHUB_REF} == *"tags"* ]]; then
          version_val= "${GITHUB_REF#refs/tags/}"
        else
          echo "Unsupported branch/tag version for this workflow"
          exit 1
        fi
        pointCharOccurrence="${version_val//[^\.]}"
        noOfOccurence="${#pointCharOccurrence}"
        
        if [ $noOfOccurence -ne 2 ]; then
             echo "Release Branch/Tag should be in format v#MajorVersion.#MinorVersion.#bugfixVersion"
            exit 1
        fi
        majorVersion=$(echo  $val |cut -f1 -d ".")
        minorVersion=$(echo  $val |cut -f2 -d ".")
        bugfixVersion=$(echo  $val |cut -f3 -d ".")
        
        

        echo "##[set-output name=branch;]$(echo $version_val)"
        echo "##[set-output name=majorVersion;]$(echo $majorVersion)"
        echo "##[set-output name=minorVersion;]$(echo $minorVersion)"
        echo "##[set-output name=bugfixVersion;]$(echo $bugfixVersion)"
        
      id: extract_branch      
    - name: Echo name
      run: | 
        echo "${{steps.extract_branch.outputs.branch}}"
        echo "Major=${{steps.extract_branch.outputs.majorVersion}}"
        echo "Minor=${{steps.extract_branch.outputs.minorVersion}}"
        echo "bug=${{steps.extract_branch.outputs.bugfixVersion}}"
